blueprint:
  name: zwave_js - Namron 2-kanal bryter
  description: |
    Controll lights and other with Namron z-wave remote

  domain: automation
  input:
    remote:
      name: Remote
      description: Namron controller
      selector:
        device:
          integration: zwave_js
          manufacturer: Namron

          
    channel_one_on_short:
      name: Channel one - on button - short press
      description: Action to run on short press on one on button 
      default: []
      selector:
        action:
    channel_one_on_long:
      name: Channel one - on button - long press
      description: Action to run on long press on one on button 
      default: []
      selector:
        action:    
    channel_one_on_stop:
      name: Channel one - on button - long press release
      description: Action to run on long press release on one on button 
      default: []
      selector:
        action:           
    channel_one_off_short:
      name: Channel one - off button - short press
      description: Action to run on short press on One off button 
      default: []
      selector:
        action:
    channel_one_off_long:
      name: Channel one - off button - long press
      description: Action to run on long press on One off button 
      default: []
      selector:
        action:
    channel_one_off_stop:
      name: Channel one - off button - long press release
      description: Action to run on long press release on One off button 
      default: []
      selector:
        action:
        
    channel_two_on_short:
      name: Channel two - on button - short press
      description: Action to run on short press on Two on button 
      default: []
      selector:
        action:
    channel_two_on_long:
      name: Channel two - on button - long press
      description: Action to run on long press on Two ont button 
      default: []
      selector:
        action:    
    channel_two_on_stop:
      name: Channel two - on button - long press release
      description: Action to run on long press release on Two on button 
      default: []
      selector:
        action:           
    channel_two_off_short:
      name: Channel two - off button - short press
      description: Action to run on short press on Two off button 
      default: []
      selector:
        action:
    channel_two_off_long:
      name: Channel two - off button - long press
      description: Action to run on long press on Two off button 
      default: []
      selector:
        action:
    channel_two_off_stop:
      name: Channel two - off button - long press release
      description: Action to run on long press release on Two off button 
      default: []
      selector:
        action:         
        
mode: restart
max_exceeded: silent


trigger:
  - platform: event
    event_type: zwave_js_value_notification
    event_data:
      device_id: !input remote

action:
  - variables:
      command: "{{ trigger.event.data.command }}"
      cluster_id: "{{ trigger.event.data.cluster_id }}"
      endpoint_id: "{{ trigger.event.data.endpoint_id }}"
      args: "{{ trigger.event.data.args }}"
      move_mode: "{{ trigger.event.data.params.move_mode }}"
  - choose:

      - conditions:
          - "{{ command == 'on' }}"
          - "{{ property_key == 001 }}"
          - "{{ endpoint_id == 0 }}"
          - "{{ args == [] }}"
        sequence: !input channel_one_on_short

      - conditions:
          - "{{ command == 'move_with_on_off' }}"
          - "{{ cluster_id == 8 }}"
          - "{{ endpoint_id == 0 }}"
          - "{{ move_mode == 'MoveMode.Up' }}"
        sequence: !input channel_one_on_long
        
      - conditions:
          - "{{ command == 'stop' }}"
          - "{{ cluster_id == 8 }}"
          - "{{ endpoint_id == 0 }}"
          - "{{ args == [] }}"
        sequence: !input channel_one_on_stop

      - conditions:
          - "{{ command == 'off' }}"
          - "{{ property_key == 002 }}"
          - "{{ endpoint_id == 0 }}"
          - "{{ args == [] }}"
        sequence: !input channel_one_off_short

      - conditions:
          - "{{ command == 'move_with_on_off' }}"
          - "{{ cluster_id == 8 }}"
          - "{{ endpoint_id == 0 }}"
          - "{{ move_mode == 'MoveMode.Down' }}"
        sequence: !input channel_one_off_long
        
      - conditions:
          - "{{ command == 'stop' }}"
          - "{{ cluster_id == 8 }}"
          - "{{ endpoint_id == 0 }}"
          - "{{ args == [] }}"
        sequence: !input channel_one_off_stop
#-------------------------------------------------------      
      - conditions:
          - "{{ command == 'on' }}"
          - "{{ property_key == 003 }}"
          - "{{ endpoint_id == 0 }}"
          - "{{ args == [] }}"
        sequence: !input channel_two_on_short

      - conditions:
          - "{{ command == 'move_with_on_off' }}"
          - "{{ cluster_id == 8 }}"
          - "{{ endpoint_id == 2 }}"
          - "{{ move_mode == 'MoveMode.Up' }}"
        sequence: !input channel_two_on_long
        
      - conditions:
          - "{{ command == 'stop' }}"
          - "{{ cluster_id == 8 }}"
          - "{{ endpoint_id == 2 }}"
          - "{{ args == [] }}"
        sequence: !input channel_two_on_stop

      - conditions:
          - "{{ command == 'off' }}"
          - "{{ cluster_id == 6 }}"
          - "{{ endpoint_id == 2 }}"
          - "{{ args == [] }}"
        sequence: !input channel_two_off_short

      - conditions:
          - "{{ command == 'move_with_on_off' }}"
          - "{{ cluster_id == 8 }}"
          - "{{ endpoint_id == 2 }}"
          - "{{ move_mode == 'MoveMode.Down' }}"
        sequence: !input channel_two_off_long
        
      - conditions:
          - "{{ command == 'stop' }}"
          - "{{ cluster_id == 8 }}"
          - "{{ endpoint_id == 2 }}"
          - "{{ args == [] }}"
        sequence: !input channel_two_off_stop
